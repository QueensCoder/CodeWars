The Western Suburbs Croquet Club has two categories of membership, Senior and Open. They would like your help with an application 
form that will tell prospective members which category they will be placed.

To be a senior, a member must be at least 55 years old and have a handicap greater than 7.
In this croquet club, handicaps range from -2 to +26; the better the player the lower the handicap.

Input

Input will consist of a list of lists containing two items each. Each list contains information for a single potential member. 
Information consists of an integer for the person's age and an integer for the person's handicap.

Note for F#: The input will be of (int list list) which is a List>

Example Input

[[18, 20],[45, 2],[61, 12],[37, 6],[21, 21],[78, 9]]
Output

Output will consist of a list of string values (in Haskell: Open or Senior) stating whether the respective member is to
be placed in the senior or open category.

Example Output

["Open", "Open", "Senior", "Open", "Open", "Senior"]

"""In order to solve this we have to ensure our output is a list. We can make sure of this by starting with an empty list. Moving on, we
  need to  iterate through the series of lists and examine two pieces of data. the first piece is the age which has to be 55 or over and
  the second piece of the handicap which has to be 7 or over. If both conditions are met the output for that person should be 'Senior'.
  If the conditions are not met it should return 'Open'. To iterate through a series of list we well use a for loop. each list will be
  referenced as i. then we will use splicing in the form of i[0](age) and i[1](handicap) to see if each piece of data meets our conditions
  for "Senior". The method below is simpler than a one liner and shows how each condition targets the specific piece of data."""
  
def open_or_senior(data):
  memb_status = []
  for i in data:
    if i[0] >= 55 and i[1] >= 7:
      memb_status.append('Senior')
    else:
      memb_status.append('Open')
  return memb_status
  
  
  
  """Now for the one liners"""
  
  def openOrSenior(data):
    return ["Senior" if age >= 55 and handicap > 7 else "Open" for age, handicap in data]
    
    #here we target age and handicap instead of i, both give us the same result.
    
    
 def openOrSenior(data):
    return ['Senior' if i[0] > 54 and i[1] > 7 else 'Open' for i in data]
    
    #this one if even more concise where we use splicing
